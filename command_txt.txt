1. created a repository in git called gitExercise1


2. Initilaize git 
$ git init
Initialized empty Git repository in C:/Users/Akansha/Desktop/git_exercise/new/exercise1/.git/

3. Connect with remote branch
Akansha@DESKTOP-VF677LJ MINGW64 ~/Desktop/git_exercise/new/exercise1 (master)
$ git remote add origin https://github.com/AkankshaJ22/gitExercise1.git

4. Created 3 empty files
Akansha@DESKTOP-VF677LJ MINGW64 ~/Desktop/git_exercise/new/exercise1 (master)
$ touch index.html

Akansha@DESKTOP-VF677LJ MINGW64 ~/Desktop/git_exercise/new/exercise1 (master)
$ touch about.html

Akansha@DESKTOP-VF677LJ MINGW64 ~/Desktop/git_exercise/new/exercise1 (master)
$ touch contact.html


5. Open Visual studio code
Akansha@DESKTOP-VF677LJ MINGW64 ~/Desktop/git_exercise/new/exercise1 (master)
$ code .

6. add initial code in the empty files and check the status 
Akansha@DESKTOP-VF677LJ MINGW64 ~/Desktop/git_exercise/new/exercise1 (master)
$ git status
On branch master

No commits yet

Untracked files:
  (use "git add <file>..." to include in what will be committed)
        about.html
        command_txt.txt
        contact.html
        index.html

nothing added to commit but untracked files present (use "git add" to track)

7. Added in staging area
Akansha@DESKTOP-VF677LJ MINGW64 ~/Desktop/git_exercise/new/exercise1 (master)
$ git add -A

8. Commit the code
Akansha@DESKTOP-VF677LJ MINGW64 ~/Desktop/git_exercise/new/exercise1 (master)
$ git commit -m "initial commit"
[master (root-commit) 4782ce5] initial commit
 4 files changed, 80 insertions(+)
 create mode 100644 about.html
 create mode 100644 command_txt.txt
 create mode 100644 contact.html
 create mode 100644 index.html

9. Again change the code and check the difference code using git f
 Akansha@DESKTOP-VF677LJ MINGW64 ~/Desktop/git_exercise/new/exercise1 (master)
$ git diff
diff --git a/about.html b/about.html
index 51aa68d..63c18d3 100644
--- a/about.html
+++ b/about.html
@@ -7,6 +7,6 @@
     <title>About page</title>
 </head>
 <body>
-
+    <div><h1>This is About page</h1></div>
 </body>
 </html>
\ No newline at end of file
diff --git a/command_txt.txt b/command_txt.txt
index 6b0fb0e..ecc7b86 100644
--- a/command_txt.txt
+++ b/command_txt.txt
@@ -40,5 +40,19 @@ Untracked files:
 nothing added to commit but untracked files present (use "git add" to track)
7. Added in staging area
+Akansha@DESKTOP-VF677LJ MINGW64 ~/Desktop/git_exercise/new/exercise1 (master)
+$ git add -A

10. Again add in the staging area and as well as commit the code using single command
Akansha@DESKTOP-VF677LJ MINGW64 ~/Desktop/git_exercise/new/exercise1 (master)
$ git commit -a -m "Added in the page title using headings "
[master 773597d] Added in the page title using headings
 4 files changed, 45 insertions(+), 3 deletions(-)

11. Again change the index file then check the code using git diff and then add in staging area and commit the code
Akansha@DESKTOP-VF677LJ MINGW64 ~/Desktop/git_exercise/new/exercise1 (master)
$ git diff
diff --git a/command_txt.txt b/command_txt.txt
index a10d0d0..6486914 100644
--- a/command_txt.txt
+++ b/command_txt.txt
@@ -79,6 +79,13 @@ index 6b0fb0e..ecc7b86 100644
 +Akansha@DESKTOP-VF677LJ MINGW64 ~/Desktop/git_exercise/new/exercise1 (master)
 +$ git add -A

+10. Again add in the staging area and as well as commit the code using single command
+Akansha@DESKTOP-VF677LJ MINGW64 ~/Desktop/git_exercise/new/exercise1 (master)
+$ git commit -a -m "Added in the page title using headings "
+[master 773597d] Added in the page title using headings
+ 4 files changed, 45 insertions(+), 3 deletions(-)
+
+



diff --git a/index.html b/index.html
index 7b05c52..c1905ee 100644
--- a/index.html
+++ b/index.html

Akansha@DESKTOP-VF677LJ MINGW64 ~/Desktop/git_exercise/new/exercise1 (master)
$ git commit -a -m "this is third commit"
[master c14b008] this is third commit
 2 files changed, 14 insertions(+)


12. accidentally change the code then try to find git status 
Akansha@DESKTOP-VF677LJ MINGW64 ~/Desktop/git_exercise/new/exercise1 (master)
$ git status
On branch master
Changes not staged for commit:
  (use "git add <file>..." to update what will be committed)
  (use "git restore <file>..." to discard changes in working directory)
        modified:   command_txt.txt
        modified:   contact.html

no changes added to commit (use "git add" and/or "git commit -a")

13. revert those changes using git when those changes are not added to staging are 
Akansha@DESKTOP-VF677LJ MINGW64 ~/Desktop/git_exercise/new/exercise1 (master)
$ git checkout .
Updated 2 paths from the index

14. Again change the code and added in statging area
Akansha@DESKTOP-VF677LJ MINGW64 ~/Desktop/git_exercise/new/exercise1 (master)
$ git status
On branch master
Changes not staged for commit:
  (use "git add <file>..." to update what will be committed)
  (use "git restore <file>..." to discard changes in working directory)
        modified:   command_txt.txt
        modified:   contact.html

no changes added to commit (use "git add" and/or "git commit -a")

Akansha@DESKTOP-VF677LJ MINGW64 ~/Desktop/git_exercise/new/exercise1 (master)
$ git add -A

15. Revert those changes after adding changes to staging area
Akansha@DESKTOP-VF677LJ MINGW64 ~/Desktop/git_exercise/new/exercise1 (master)
$ git status
On branch master
Changes to be committed:
  (use "git restore --staged <file>..." to unstage)
        modified:   command_txt.txt
        modified:   contact.html

Changes not staged for commit:
  (use "git add <file>..." to update what will be committed)
  (use "git restore <file>..." to discard changes in working directory)
        modified:   command_txt.txt


Akansha@DESKTOP-VF677LJ MINGW64 ~/Desktop/git_exercise/new/exercise1 (master)
$ git reset HEAD
Unstaged changes after reset:
M       command_txt.txt
M       contact.html

Akansha@DESKTOP-VF677LJ MINGW64 ~/Desktop/git_exercise/new/exercise1 (master)
$ git status
On branch master
Changes not staged for commit:
  (use "git add <file>..." to update what will be committed)
  (use "git restore <file>..." to discard changes in working directory)
        modified:   command_txt.txt
        modified:   contact.html

no changes added to commit (use "git add" and/or "git commit -a")


16. Again changes in pages and added in staging arean and commit th code 
Akansha@DESKTOP-VF677LJ MINGW64 ~/Desktop/git_exercise/new/exercise1 (master)
$ git status
On branch master
Changes not staged for commit:
  (use "git add <file>..." to update what will be committed)
  (use "git restore <file>..." to discard changes in working directory)
        modified:   about.html
        modified:   command_txt.txt
        modified:   contact.html

no changes added to commit (use "git add" and/or "git commit -a")

Akansha@DESKTOP-VF677LJ MINGW64 ~/Desktop/git_exercise/new/exercise1 (master)
$ git diff
diff --git a/about.html b/about.html
index 63c18d3..37c8d96 100644
--- a/about.html
+++ b/about.html
@@ -8,5 +8,208 @@
 </head>
 <body>
     <div><h1>This is About page</h1></div>
+
+    <div>
+        <p>
+            our creative development agency is a
+dynamic, cross-functional team of
+designers and engineers
+Abhishek S.R.Software Engineer
+
+Achal A.Director
+
+Adhiraj G.Associate Product Owner
+
+Aditi K.Sr. Quality Analyst
+
+Aditi S.Software Engineer

Akansha@DESKTOP-VF677LJ MINGW64 ~/Desktop/git_exercise/new/exercise1 (master)
$

Akansha@DESKTOP-VF677LJ MINGW64 ~/Desktop/git_exercise/new/exercise1 (master)
$ git commit -a -m "Change in 3 files contact, command_txt.txt, and about page"
[master 427cc36] Change in 3 files contact, command_txt.txt, and about page
 3 files changed, 314 insertions(+)

Akansha@DESKTOP-VF677LJ MINGW64 ~/Desktop/git_exercise/new/exercise1 (master)
$ git status
On branch master
nothing to commit, working tree clean


17. Revert those changes after committing those changes .
Akansha@DESKTOP-VF677LJ MINGW64 ~/Desktop/git_exercise/new/exercise1 (master)
$ git log
commit 7f012ecabe2975485849628000cf039d3af80d4d (HEAD -> master)
Author: Akanksha <akanksha.jain@vinsol.com>
Date:   Fri Nov 19 14:35:00 2021 +0530

    changes in command file

commit 427cc3637a728544247944ceec21e0fa8b1e2610
Author: Akanksha <akanksha.jain@vinsol.com>
Date:   Fri Nov 19 13:57:43 2021 +0530

    Change in 3 files contact, command_txt.txt, and about page

commit c14b008a60cedf4fa376ef4ed8e652307773d7c3
Author: Akanksha <akanksha.jain@vinsol.com>
Date:   Fri Nov 19 13:30:19 2021 +0530

    this is third commit

commit 773597d9b3ea0a84ce040400c767d6a3578c86ab
Author: Akanksha <akanksha.jain@vinsol.com>
Date:   Fri Nov 19 13:28:49 2021 +0530

    Added in the page title using headings

commit 4782ce55ec9816ee145089d0280d3c2a8031a2e9
Author: Akanksha <akanksha.jain@vinsol.com>
Date:   Fri Nov 19 13:21:08 2021 +0530

    initial commit

Akansha@DESKTOP-VF677LJ MINGW64 ~/Desktop/git_exercise/new/exercise1 (master)
$ git reset HEAD~
Unstaged changes after reset:
M       command_txt.txt


18. Display all the commits 
Akansha@DESKTOP-VF677LJ MINGW64 ~/Desktop/git_exercise/new/exercise1 (master)
$ git log
commit 427cc3637a728544247944ceec21e0fa8b1e2610 (HEAD -> master)
Author: Akanksha <akanksha.jain@vinsol.com>
Date:   Fri Nov 19 13:57:43 2021 +0530

    Change in 3 files contact, command_txt.txt, and about page

commit c14b008a60cedf4fa376ef4ed8e652307773d7c3
Author: Akanksha <akanksha.jain@vinsol.com>
Date:   Fri Nov 19 13:30:19 2021 +0530

    this is third commit

commit 773597d9b3ea0a84ce040400c767d6a3578c86ab
Author: Akanksha <akanksha.jain@vinsol.com>
Date:   Fri Nov 19 13:28:49 2021 +0530

    Added in the page title using headings

commit 4782ce55ec9816ee145089d0280d3c2a8031a2e9
Author: Akanksha <akanksha.jain@vinsol.com>
Date:   Fri Nov 19 13:21:08 2021 +0530

    initial commit


19. Display a specific commit 
$ git log -p -2
commit 427cc3637a728544247944ceec21e0fa8b1e2610 (HEAD -> master)
Author: Akanksha <akanksha.jain@vinsol.com>
Date:   Fri Nov 19 13:57:43 2021 +0530

    Change in 3 files contact, command_txt.txt, and about page

diff --git a/about.html b/about.html
index 63c18d3..37c8d96 100644
--- a/about.html
+++ b/about.html
@@ -8,5 +8,208 @@
 </head>
 <body>
     <div><h1>This is About page</h1></div>
+
+    <div>
+        <p>
+            our creative development agency is a
+dynamic, cross-functional team of
+designers and engineers
+Abhishek S.R.Software Engineer
+
+Achal A.Director


20. create branches called "feature1" and "feature2" from master.
Akansha@DESKTOP-VF677LJ MINGW64 ~/Desktop/git_exercise/new/exercise1 (master)
$ git branch feature1

Akansha@DESKTOP-VF677LJ MINGW64 ~/Desktop/git_exercise/new/exercise1 (master)
$ git branch
  feature1
* master

Akansha@DESKTOP-VF677LJ MINGW64 ~/Desktop/git_exercise/new/exercise1 (master)
$ git branch feature2

Akansha@DESKTOP-VF677LJ MINGW64 ~/Desktop/git_exercise/new/exercise1 (master)
$ git branch
  feature1
  feature2
* master

21. Delete branch "feature2".
Akansha@DESKTOP-VF677LJ MINGW64 ~/Desktop/git_exercise/new/exercise1 (master)
$ git branch -d feature2
Deleted branch feature2 (was 427cc36).

22. Make some commits on "feature1"
Akansha@DESKTOP-VF677LJ MINGW64 ~/Desktop/git_exercise/new/exercise1 (master)
$ git checkout feature1
Switched to branch 'feature1'
M       command_txt.txt

Akansha@DESKTOP-VF677LJ MINGW64 ~/Desktop/git_exercise/new/exercise1 (feature1)
$ git status
On branch feature1
Changes not staged for commit:
  (use "git add <file>..." to update what will be committed)
  (use "git restore <file>..." to discard changes in working directory)
        modified:   command_txt.txt
        modified:   index.html

no changes added to commit (use "git add" and/or "git commit -a")

Akansha@DESKTOP-VF677LJ MINGW64 ~/Desktop/git_exercise/new/exercise1 (feature1)
$ git commit -a -m "this is feature1 branch "
[feature1 d25029e] this is feature1 branch
 2 files changed, 190 insertions(+), 1 deletion(-)

23. Make some commits on branch "master".
Akansha@DESKTOP-VF677LJ MINGW64 ~/Desktop/git_exercise/new/exercise1 (feature1)
$ git stash
Saved working directory and index state WIP on feature1: d25029e this is feature1 branch

Akansha@DESKTOP-VF677LJ MINGW64 ~/Desktop/git_exercise/new/exercise1 (feature1)
$ git checkout master
Switched to branch 'master'

Akansha@DESKTOP-VF677LJ MINGW64 ~/Desktop/git_exercise/new/exercise1 (master)
$ git commit -a -m "added navlist in master"
[master 04a5169] added navlist in master
 2 files changed, 202 insertions(+)
 
24. merge branch "feature1" in "master" (make some conflicts by changing same file on same line in both the branches)
  Akansha@DESKTOP-VF677LJ MINGW64 ~/Desktop/git_exercise/new/exercise1 (master)
$ git merge feature1
Auto-merging index.html
Auto-merging command_txt.txt
CONFLICT (content): Merge conflict in command_txt.txt
Automatic merge failed; fix conflicts and then commit the result.

Akansha@DESKTOP-VF677LJ MINGW64 ~/Desktop/git_exercise/new/exercise1 (master|MERGING)
$ git commit -a -m "merged commit"
[master 5b88d3b] merged commit

25. create branch "feature2" from master.
Akansha@DESKTOP-VF677LJ MINGW64 ~/Desktop/git_exercise/new/exercise1 (master)
$ git branch feature2

26. Make some commits on "feature2".
Akansha@DESKTOP-VF677LJ MINGW64 ~/Desktop/git_exercise/new/exercise1 (master)
$ git branch
  feature1
  feature2
* master

Akansha@DESKTOP-VF677LJ MINGW64 ~/Desktop/git_exercise/new/exercise1 (master)
$ git checkout feature2
Switched to branch 'feature2'
M       command_txt.txt

Akansha@DESKTOP-VF677LJ MINGW64 ~/Desktop/git_exercise/new/exercise1 (feature2)
$ git status
On branch feature2
Changes not staged for commit:
  (use "git add <file>..." to update what will be committed)
  (use "git restore <file>..." to discard changes in working directory)
        modified:   command_txt.txt

no changes added to commit (use "git add" and/or "git commit -a")

Akansha@DESKTOP-VF677LJ MINGW64 ~/Desktop/git_exercise/new/exercise1 (feature2)
$ git commit -a -m "changed command file in feature branch"
[feature2 2fc4d66] changed command file in feature branch
 1 file changed, 15 insertions(+)
 

27. Make some commits on branch "master".
Akansha@DESKTOP-VF677LJ MINGW64 ~/Desktop/git_exercise/new/exercise1 (feature2)
$ git checkout master
error: Your local changes to the following files would be overwritten by checkout:
        command_txt.txt
Please commit your changes or stash them before you switch branches.
Aborting

Akansha@DESKTOP-VF677LJ MINGW64 ~/Desktop/git_exercise/new/exercise1 (feature2)
$ git commit -a -m "changed command file in feature2 branch"
[feature2 8b82d75] changed command file in feature2 branch
 1 file changed, 31 insertions(+)

Akansha@DESKTOP-VF677LJ MINGW64 ~/Desktop/git_exercise/new/exercise1 (feature2)
$ git checkout master
Switched to branch 'master'

Akansha@DESKTOP-VF677LJ MINGW64 ~/Desktop/git_exercise/new/exercise1 (master)
$ git status
On branch master
Changes not staged for commit:
  (use "git add <file>..." to update what will be committed)
  (use "git restore <file>..." to discard changes in working directory)
        modified:   command_txt.txt

no changes added to commit (use "git add" and/or "git commit -a")

Akansha@DESKTOP-VF677LJ MINGW64 ~/Desktop/git_exercise/new/exercise1 (master)
$ git commit -a -m "changed command file in master"
[master 678174c] changed command file in master
 1 file changed, 46 insertions(+)

28. rebase branch "master" in "feature2" (make some conflicts by changing same file on same line in both the branches) .
 Akansha@DESKTOP-VF677LJ MINGW64 ~/Desktop/git_exercise/new/exercise1 (master)
$ git checkout feature2
error: Your local changes to the following files would be overwritten by checkout:
        command_txt.txt
Please commit your changes or stash them before you switch branches.
Aborting

Akansha@DESKTOP-VF677LJ MINGW64 ~/Desktop/git_exercise/new/exercise1 (master)
$ git stash
Saved working directory and index state WIP on master: 678174c changed command file in master

Akansha@DESKTOP-VF677LJ MINGW64 ~/Desktop/git_exercise/new/exercise1 (master)
$ git checkout feature2
Switched to branch 'feature2'

Akansha@DESKTOP-VF677LJ MINGW64 ~/Desktop/git_exercise/new/exercise1 (feature2)
$ git rebase master
error: could not apply 2fc4d66... changed command file in feature branch
Resolve all conflicts manually, mark them as resolved with
"git add/rm <conflicted_files>", then run "git rebase --continue".
You can instead skip this commit: run "git rebase --skip".
To abort and get back to the state before "git rebase", run "git rebase --abort".
Could not apply 2fc4d66... changed command file in feature branch
Auto-merging command_txt.txt
CONFLICT (content): Merge conflict in command_txt.txt

Akansha@DESKTOP-VF677LJ MINGW64 ~/Desktop/git_exercise/new/exercise1 (feature2|REBASE 1/2)
$ git status
interactive rebase in progress; onto 678174c
Last command done (1 command done):
   pick 2fc4d66 changed command file in feature branch
Next command to do (1 remaining command):
   pick 8b82d75 changed command file in feature2 branch
  (use "git rebase --edit-todo" to view and edit)
You are currently rebasing branch 'feature2' on '678174c'.
  (fix conflicts and then run "git rebase --continue")
  (use "git rebase --skip" to skip this patch)
  (use "git rebase --abort" to check out the original branch)

Unmerged paths:
  (use "git restore --staged <file>..." to unstage)
  (use "git add <file>..." to mark resolution)
        both modified:   command_txt.txt

no changes added to commit (use "git add" and/or "git commit -a")

Akansha@DESKTOP-VF677LJ MINGW64 ~/Desktop/git_exercise/new/exercise1 (feature2|REBASE 1/2)
$ git add -A

Akansha@DESKTOP-VF677LJ MINGW64 ~/Desktop/git_exercise/new/exercise1 (feature2|REBASE 1/2)
$ git status
interactive rebase in progress; onto 678174c
Last command done (1 command done):
   pick 2fc4d66 changed command file in feature branch
Next command to do (1 remaining command):
   pick 8b82d75 changed command file in feature2 branch
  (use "git rebase --edit-todo" to view and edit)
You are currently rebasing branch 'feature2' on '678174c'.
  (all conflicts fixed: run "git rebase --continue")

nothing to commit, working tree clean

Akansha@DESKTOP-VF677LJ MINGW64 ~/Desktop/git_exercise/new/exercise1 (feature2|REBASE 1/2)
$ git rebase --continue
error: could not apply 8b82d75... changed command file in feature2 branch
Resolve all conflicts manually, mark them as resolved with
"git add/rm <conflicted_files>", then run "git rebase --continue".
You can instead skip this commit: run "git rebase --skip".
To abort and get back to the state before "git rebase", run "git rebase --abort".
Could not apply 8b82d75... changed command file in feature2 branch
Auto-merging command_txt.txt
CONFLICT (content): Merge conflict in command_txt.txt

29. push changes on remote repository.
Akansha@DESKTOP-VF677LJ MINGW64 ~/Desktop/git_exercise/new/exercise1 (feature2|REBASE 2/2)
$ git push origin master
Enumerating objects: 38, done.
Counting objects: 100% (38/38), done.
Delta compression using up to 8 threads
Compressing objects: 100% (38/38), done.
Writing objects: 100% (38/38), 6.90 KiB | 1.38 MiB/s, done.
Total 38 (delta 23), reused 0 (delta 0), pack-reused 0
remote: Resolving deltas: 100% (23/23), done.
To https://github.com/AkankshaJ22/gitExercise1.git
 * [new branch]      master -> master
Akansha@DESKTOP-VF677LJ MINGW64 ~/Desktop/git_exercise/new/exercise1 (feature2|REBASE 2/2)
$ git checkout feature1
Warning: you are leaving 1 commit behind, not connected to
any of your branches:

  dacc44a Changed in command file

If you want to keep it by creating a new branch, this may be a good time
to do so with:

 git branch <new-branch-name> dacc44a

Switched to branch 'feature1'

Akansha@DESKTOP-VF677LJ MINGW64 ~/Desktop/git_exercise/new/exercise1 (feature2|REBASE 2/2)
$ git branch
* feature1
  feature2
  master

Akansha@DESKTOP-VF677LJ MINGW64 ~/Desktop/git_exercise/new/exercise1 (feature2|REBASE 2/2)
$ git pull
There is no tracking information for the current branch.
Please specify which branch you want to merge with.
See git-pull(1) for details.

    git pull <remote> <branch>

If you wish to set tracking information for this branch you can do so with:

    git branch --set-upstream-to=origin/<branch> feature1


Akansha@DESKTOP-VF677LJ MINGW64 ~/Desktop/git_exercise/new/exercise1 (feature2|REBASE 2/2)
$ git push
fatal: The current branch feature1 has no upstream branch.
To push the current branch and set the remote as upstream, use

    git push --set-upstream origin feature1


Akansha@DESKTOP-VF677LJ MINGW64 ~/Desktop/git_exercise/new/exercise1 (feature2|REBASE 2/2)
$ git push --set-upstream origin feature1
Everything up-to-date
Branch 'feature1' set up to track remote branch 'feature1' from 'origin'.

Akansha@DESKTOP-VF677LJ MINGW64 ~/Desktop/git_exercise/new/exercise1 (feature2|REBASE 2/2)
$ git checkout feature2
Switched to branch 'feature2'

Akansha@DESKTOP-VF677LJ MINGW64 ~/Desktop/git_exercise/new/exercise1 (feature2|REBASE 2/2)
$ git pull
There is no tracking information for the current branch.
Please specify which branch you want to merge with.
See git-pull(1) for details.

    git pull <remote> <branch>

If you wish to set tracking information for this branch you can do so with:

    git branch --set-upstream-to=origin/<branch> feature2


Akansha@DESKTOP-VF677LJ MINGW64 ~/Desktop/git_exercise/new/exercise1 (feature2|REBASE 2/2)
$ git push
fatal: The current branch feature2 has no upstream branch.
To push the current branch and set the remote as upstream, use

    git push --set-upstream origin feature2


Akansha@DESKTOP-VF677LJ MINGW64 ~/Desktop/git_exercise/new/exercise1 (feature2|REBASE 2/2)
$ git push --set-upstream origin feature2
Enumerating objects: 8, done.
Counting objects: 100% (8/8), done.
Delta compression using up to 8 threads
Compressing objects: 100% (6/6), done.
Writing objects: 100% (6/6), 915 bytes | 915.00 KiB/s, done.
Total 6 (delta 4), reused 0 (delta 0), pack-reused 0
remote: Resolving deltas: 100% (4/4), completed with 2 local objects.
remote:
remote: Create a pull request for 'feature2' on GitHub by visiting:
remote:      https://github.com/AkankshaJ22/gitExercise1/pull/new/feature2
remote:
To https://github.com/AkankshaJ22/gitExercise1.git
 * [new branch]      feature2 -> feature2
Branch 'feature2' set up to track remote branch 'feature2' from 'origin'.









